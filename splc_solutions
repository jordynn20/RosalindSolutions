##Given: A DNA string s (of length at most 1 kbp) and a collection of substrings of s acting as introns. All strings are given in FASTA format.

##Return: A protein string resulting from transcribing and translating the exons of s. (Note: Only one solution will exist for the dataset provided.)




code = {
    'TTT': 'F', 'TTC': 'F', 'TTA': 'L', 'TTG': 'L',
    'CTT': 'L', 'CTC': 'L', 'CTA': 'L', 'CTG': 'L',
    'ATT': 'I', 'ATC': 'I', 'ATA': 'I', 'ATG': 'M',
    'GTT': 'V', 'GTC': 'V', 'GTA': 'V', 'GTG': 'V',
    'TCT': 'S', 'TCC': 'S', 'TCA': 'S', 'TCG': 'S',
    'CCT': 'P', 'CCC': 'P', 'CCA': 'P', 'CCG': 'P',
    'ACT': 'T', 'ACC': 'T', 'ACA': 'T', 'ACG': 'T',
    'GCT': 'A', 'GCC': 'A', 'GCA': 'A', 'GCG': 'A',
    'TAT': 'Y', 'TAC': 'Y', 'TAA': '',  'TAG': '',
    'CAT': 'H', 'CAC': 'H', 'CAA': 'Q', 'CAG': 'Q',
    'AAT': 'N', 'AAC': 'N', 'AAA': 'K', 'AAG': 'K',
    'GAT': 'D', 'GAC': 'D', 'GAA': 'E', 'GAG': 'E',
    'TGT': 'C', 'TGC': 'C', 'TGA': '',  'TGG': 'W',
    'CGT': 'R', 'CGC': 'R', 'CGA': 'R', 'CGG': 'R',
    'AGT': 'S', 'AGC': 'S', 'AGA': 'R', 'AGG': 'R',
    'GGT': 'G', 'GGC': 'G', 'GGA': 'G', 'GGG': 'G'
}

with open('rosalind_splc (5).txt', 'r') as file:
    fasta_file = file.read()

def fasta_split(fastas):
    seq = {}
    label = ''
    for line in fastas.strip().split('\n'):
        if line.startswith('>'):
            label = line[1:]
            seq[label] = ''
        else:
            seq[label] += line.strip()
    return seq

def remove_introns(dna, introns):
    for intron in introns:
        dna = dna.replace(intron, '')
    return dna

def translate_protein(dna):
    codons = [dna[i:i+3] for i in range(0, len(dna) - len(dna) % 3, 3)]
    protein = []
    for codon in codons:
        amino_acid = code.get(codon, '')
        if amino_acid == '':
            break
        protein.append(amino_acid)
    return ''.join(protein)

def protein_string(fastas):
    dna_sequences = fasta_split(fastas)
    sequences = list(dna_sequences.values())
    full_dna = sequences[0]  
    introns = sequences[1:]   
    exons = remove_introns(full_dna, introns)
    protein_seq = translate_protein(exons)
    print(protein_seq)

protein_string(fasta_file)
